##################################################
#
# Protocol File
#
# Protocol file for Keithley 2700
##################################################


##################################################
# General Settings
##################################################

Terminator = '\r\n';
ReplyTimeout = 2000;


###################################################
# Get functions
###################################################

getIDN {
    out "*IDN?";
    #Read no more that 39 chars (EPICS limit)
    in "%/(.{0,39})/";
    ExtraInput = Ignore;
}

# /// Query Control Source (IMMediate, TIMer, MANual, BUS, or EXTernal).
getSource{
	ExtraInput = Ignore;
	out "TRIG:SOUR?";
	in "%{IMM|TIM|MAN|BUS|EXT}";
}

# /// Query state of delay
getDelayState {
   ExtraInput = Ignore;
   out "TRIG:DEL:AUTO?";
   in "%{ON|OFF}";
}

getScanState{
	ExtraInput = Ignore;
	out "ROUT:SCAN:LSEL?";
	in "%{NONE|INT}";
}

getBufferControl{
    ExtraInput = Ignore;
    out "TRAC:FEED:CONT?";
    in "%{NEV|NEXT|ALW}";
}

getBufferFeed{
	ExtraInput = Ignore;	
	out "TRAC:FEED?";
	in "%{SENS|CALC|NONE}"
}

getBufferSize{
    ExtraInput = Ignore;
    out "TRAC:POIN?";
    in "%d";

}

# /// Query State of Scan
getSampleCount{
	ExtraInput = Ignore;
	out "SAMP:COUN?";
	in "%d";	
}

# /// Query state of buffer auto-clear (ON/OFF)
getBufferState{
   ExtraInput = Ignore;
   out "TRAC:CLE:AUTO?";
   in "%{ON|OFF}";
}

# /// Query continuous initiation
getInitState{
	ExtraInput = Ignore;
	out "INIT:CONT?";
	in "%{ON|OFF}";
}

getTimeStamp{
    ExtraInput = Ignore;
	out "TRAC:TST:FORM?";
    in "%{ABS|DELT}"
}

getResistanceRate{
    ExtraInput = Ignore;
	out "FRES:NPLC?";
    in "%f";
}

getResistanceDigits{
    ExtraInput = Ignore;
	out "FRES:DIG?";
    in  "%d,%(\$1)d";
}

getAutoRange{
    ExtraInput = Ignore;
    out "FRES:RANG:AUTO?";
    in "%{ON|OFF},%d";
}

getDataElements{
    ExtraInput = Ignore;
    out "FORM:ELEM?";
    in "%#s";
}

getBufferStats{
    ExtraInput = Ignore;
    out "TRAC:FREE?";
    in "%#s";

}

getFrequencyMeasurment{
    ExtraInput = Ignore;
    out ":FUNC FRES?";
    in "%(\$1)d" ;
}

getNextBufferReading{
    ExtraInput = Ignore;
    out "TRAC:NEXT?";
    in "%d";
}

getReadingsRange{
    out "TRAC:DATA:SEL? %(\$1)d,%(\$2)d";
    in "%#s";
}

MeasureFRESMode{
    out ":MEAS:FRES?";
    in "%f";
}
MeasureDCVoltageMode{
    out ":MEAS:VOLT:DC?";
    in "%f";
}

MeasureDCCurrentMode{
    out ":MEAS:CURR:DC?";
    in "%f";
}

#######################################################
# Set functions
#######################################################

# ///Select Control Source (IMMediate, TIMer, MANual, BUS, or EXTernal).
setSource{
	out "TRIG:SOUR %{IMM|TIM|MAN|BUS|EXT}";
}

# /// Enables or disable auto delay
setDelayState {
   out "TRIG:DEL:AUTO %{ON|OFF}";
}

# /// Enable or Disable Scan
setScanState{
	out "ROUT:SCAN:LSEL %{NONE|INT}";
}

# /// Select buffer control mode (NEVer, NEXT, or ALWays)
setBufferControl{
	out "TRAC:FEED:CONT %{NEV|NEXT|ALW}";
}

# /// Select Source of Readings SENSe, CALCulate or NONE
setBufferFeed{
	out "TRAC:FEED %{SENS|CALC|NONE}"
}

# /// Specify size of buffer
setBufferSize{
	out "TRAC:POIN %d";
}

# /// Set Sample Count (1 to 55000)
setSampleCount{
	out "SAMP:COUN %d";
}

setBufferState {
   out "TRAC:CLE:AUTO %{ON|OFF}";
}

# /// Enable or disable continuous initiation
setInitState{
	out "INIT:CONT %{ON|OFF}";
}

# /// Select Timestamp format
setTimeStamp{
	out "TRAC:TST:FORM %{ABS|DELT}";
}

# /// Set Rate for 4 Ohms in PLCs 
setResistanceRate{
	out "FRES:NPLC %f";
}

# ///Set # of digits for 4 Ohms <n> = 4-7 (comeback)
setResistanceDigits{
	out "FRES:DIG %d,(\@101:%(\$1)d)";
}

setAutoRange{
    out "FRES:RANG:AUTO %{ON|OFF},(\@101:%d)";
}

setDataElements{
    out "FORM:ELEM %s";
}

emptyQueue{
    out "SYST:CLE";
}

setFourWireResistance{
    out "FUNC FRES,(\@101:%(\$1)d)";
}

clearBuffer{
    out "TRAC:CLE";
}

